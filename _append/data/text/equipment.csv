Name,Description,Author,Comment,Witch Spell,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Script: On Dodge,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: End Turn,Script: On any equipment use,Script: Before execute,Script: On Snap,Script: On Fury,Script: On any countdown reduce
Mars Gospel,Do [sword]<d6> damage|25% chance +[reduce]2 armour,,Mars Gospel is unused in normal ncrmod. -Black Widow,,1,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 2); sfx(~reduce~|~~|0.2);  } attack(d); sfxdamage(target|d);,Barricade,MAX5,,ORANGE,change_power,change_power,,,0,NO,NO,,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 2); sfx(~reduce~|~~|0.2);  },,,,,,,,,,
Mars Gospel_upgraded,Do [sword]<d6> damage|25% chance +[reduce]3 armour,,,,1,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 3); sfx(~reduce~|~~|0.2);  } attack(d); sfxdamage(target|d);,Barricade,MAX5,,ORANGE,,,,,0,NO,NO,,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 3); sfx(~reduce~|~~|0.2);  },,,,,,,,,,
Mars Gospel_downgraded,Do [sword]<d6> damage,,,,1,attack(d); sfxdamage(target|d);,Barricade,MAX5,,ORANGE,,,,,0,NO,NO,,,,,,,,,,,,
Jumbo Cauldron,Deal [sword]<d6> damage|(on turn start[;] reroll lowest dice),Titku,,,2,attack(d); sfxdamage(target|d);,Broken Gadget,NORMAL,,PURPLE,,,,,0,NO,NO,,,,,,if(self.dicepool.length > 0) { var min = 7; var dicelist = [for(dice in self.dicepool) if(dice.available()) dice]; for(dice in dicelist) if(dice.basevalue < min) min = dice.basevalue; for(dice in dicelist) if(dice.basevalue == min) { dice.].animatereroll(rand([1|2|3|4|5|6]) | self.screenposition()); break; } },,,,,,
Jumbo Cauldron_downgraded,Deal [sword]2 damage|Get a new dice,Titku,,,2,attack(2); sfxdamage(target|2); givedice();,Broken Gadget,NORMAL,,PURPLE,,,,,0,NO,NO,,givedice();,,,,,,,,,,
Jumbo Cauldron_upgraded,Deal [sword]<d6> damage|(on turn start[;] flip lowest dice),Titku,,,2,attack(d); sfxdamage(target|d);,Broken Gadget,NORMAL,,PURPLE,,,,,0,NO,NO,,,,,,if(self.dicepool.length > 0) { var min = 7; var dicelist = [for(dice in self.dicepool) if(dice.available()) dice]; for(dice in dicelist) if(dice.basevalue < min) min = dice.basevalue; for(dice in dicelist) if(dice.basevalue == min) { dice.].animatereroll(7 - d) | self.screenposition()); break; } },,,,,,
Polarized Cauldron,Do [sword]1 damage|Get a dice of different parity,Titku,,,1,attack(1); sfxdamage(target|1); if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));,Broken Gadget,NORMAL,,GRAY,,,,,0,NO,NO,,if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));,,,,,,,,,,
Polarized Cauldron_downgraded,Do [sword]1 damage,Titku,,,1,attack(1); sfxdamage(target|1); if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));,Broken Gadget,NORMAL,,GRAY,,,,,0,NO,NO,,if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));,,,,,,,,,,
Pulsing Cauldron,Do [sword]1 damage|On low (1-3)[;] get a high dice|On high (4-6)[;] get a low dice,Titku,,,1,attack(1); sfxdamage(target|1); if(d < 4) givedice(rand([4|5|6])); else givedice(rand([1|2|3]));,Broken Gadget,NORMAL,,GRAY,,,,,0,NO,NO,,if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));,,,,,,,,,,
Superconductor,Deal [sword]30 damage.|Dice used in non-countdown|equipment also count for this,Titku,,,2,attack(30); sfxdamage(target|30);,Broken Gadget,COUNTDOWN,60,RED,,,,,,,,,,,,,,,var last = self.lastequipmentused; if(!onlimit && last != null && last.assigneddice.length > 0) { var dicelist = [for(dice in last.assigneddice) if(dice != null) dice]; for(dice in dicelist) { last.remove(dice); e.assigndice(dice); } },,,,
Oingo Boingo Rageblade,Do [sword]2x<slotdoubles> damage[;]|on double 6[;] gain [fury]Fury|[80%][gray]''oingo boingo rageblade''[],Titku,Unused in normal ncrmod. -Black Widow,,2,attack(d * 2); sfxdamage(target|d * 2); if(actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) { inflictself(FURY); sfx(~_fury~); },Fury,DOUBLES|DOUBLES,,RED,change_power,change_power,,none,,,,,,,,,,,,,,if(actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) { e.preventdefault = true; e.maintainfury = true; },
Oingo Boingo Rageblade_upgraded,Do [sword]2x<slotdoubles> damage[;]|on double 4 or 6[;] gain [fury]Fury|[80%][gray]''oingo boingo rageblade''[],Titku,,,2,attack(d * 2); sfxdamage(target|d * 2); if((actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) # (actualdice[0] != null && actualdice[0].basevalue == 4 && actualdice[1] != null && actualdice[1].basevalue == 4)) { inflictself(FURY); sfx(~_fury~); } /*double 4 was actually a typo; i meant double 5. then i decided 4 is cooler and we need more 4s*/,Fury,DOUBLES|DOUBLES,,RED,,,,none,,,,,,,,,,,,,,if((actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) # (actualdice[0] != null && actualdice[0].basevalue == 4 && actualdice[1] != null && actualdice[1].basevalue == 4)) { e.preventdefault = true; e.maintainfury = true; },
Oingo Boingo Rageblade_downgraded,Do [sword]12 damage[;] gain [fury]Fury|[80%][gray]''oingo boingo rageblade''[],Titku,,,2,attack(12); sfxdamage(target|12); inflictself(FURY); sfx(~_fury~);,Fury,REQUIRE6|REQUIRE6,,RED,,,,none,,,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Hamm,Deal [shock]<d6> damage|On 6[;] inflict [shock]Shock,Titku,,1,1,attack(d|SHOCK); sfxdamage(target|d); if(d == 6) { inflict(SHOCK); sfx(~_shock~); },Broken Gadget,MAX3|MAX3,,YELLOW,change_power,change_power,,,,,,,,,,,,,,,,,
Hamm_upgraded,Deal [shock]<d6> damage|On 6 or 8[;] inflict [shock]Shock,Titku,,,1,attack(d|SHOCK); sfxdamage(target|d); if(d == 6 # d == 8) { inflict(SHOCK); sfx(~_shock~); },Broken Gadget,MAX4|MAX4,,YELLOW,,,,,,,,,,,,,,,,,,,
Hamm_downgraded,Deal [shock]<d6> damage|On 2[;] inflict [shock]Shock,Titku,,,1,attack(d|SHOCK); sfxdamage(target|d); if(d == 2) { inflict(SHOCK); sfx(~_shock~); },Broken Gadget,MAX3|MAX3,,YELLOW,,,,,,,,,,,,,,,,,,,
Doodad,Deal [sword]<d6>[;] replace this with|a temporary item next turn,Titku,,,2,attack(d); sfxdamage(target|d);,Broken Gadget,NORMAL,,,reducesize,complicate,,,,,,unfinished|excludefromrandomlists,,,,if(e.timesused > 0) { var newitem = rand(getequipmentlist(null|[e.size == 1 ? 'small' : 'large']|runscript('ncrmod/getexceptions'|[self])); giveequipment(newitem); },,,,,,,
tempname1,Reduce countdowns by <d6>|Return both dice,Titku,,,1,,Broken Gadget,DOUBLES|DOUBLES,,GREEN,,,,,,YES,,unfinished|excludefromrandomlists,,,,,,,,,,,
Oddeven Dicemanip,At odd health: flip the dice|At even health: reroll the dice,Titku,,,1,if(self.hp % 2 == 1) givedice(7 - d); else givedice();,Broken Gadget,NORMAL,,,change_power,,,,,YES,,,,,,,,,,,,,
Oddeven Dicemanip_upgraded,At odd health: flip the dice|At even health: reroll the dice|Recover [heal]2 health,Titku,,,1,if(self.hp % 2 == 1) givedice(7 - d); else givedice(); attackself(-2); sfx(~_heal~);,Broken Gadget,NORMAL,,,,,,,,YES,,,,,,,,,,,,,
Mercury Fly Trap,Do [sword]<d6> damage. If your dice|sum to greater than enemy's health[;] heal [heal]3,Titku,,,1,,Broken Gadget,MIN4,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname2,If enemy's health bar is more percent full|than yours[;] then drain [heart]<d6>. Otherwise[;]|deal [sword]<d6> damage.,Titku,,,1,,Broken Gadget,MAX3,,RED,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Bad Damage,Do [sword]<d6> damage. If you're|at full HP[;] return the dice,,Original plan was to give this to parallel Warrior as some early drop. -Black Widow,,2,attack(d); sfxdamage(target|d); if(self.hp == self.maxhp) givedice(d);,Pea Gun,NORMAL,,RED,change_power,change_power,,,,,,,if(self.hp == self.maxhp) givedice(d);,,,,,,,,,,
Bad Damage_downgraded,Do [sword]<d6> damage,,,,2,attack(d); sfxdamage(target|d);,Pea Gun,NORMAL,,RED,,,,,,,,,,,,,,,,,,,
Bad Damage_upgraded,Do [sword]<d6> dmg. If [heart]3 or less|from full HP[;] return the dice,,,,2,attack(d); sfxdamage(target|d); if(self.hp >= self.maxhp - 3) givedice(d);,Pea Gun,NORMAL,,RED,,,,,,,,,if(self.hp == self.maxhp) givedice(d);,,,,,,,,,,
tempname3,Unlocks if you lose 12 or more health|during enemy's last turn and this turn,Titku,,,1,,Broken Gadget,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname4,If your limit break is full[;]|do Z and decharge it entirely,Titku,,,1,,Broken Gadget,EVEN,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname5,Lose [heart]6 health[;] refill your limit break totally|This turns into Scrap Metal on use,Titku,,,1,,Broken Gadget,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname6,Gain [cog]Injection,Titku,,,1,,Broken Gadget,REQUIRE6,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname7,Mix up slots on|enemy cards,Titku,,,1,,Broken Gadget,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname8,This card deals <d6> damage|next fight (total: <var:stonks>),Titku,,,1,,Broken Gadget,NORMAL,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname9,This card deals <var:ultrastonks> damage at the start of every fight|On use[;] increase that by 1,Titku,,,1,,Broken Gadget,REQUIRE6,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Bopulate,Deal [sword]3 damage|If [yellow]<var:deckbonusnumber>[] is <d6>[;] return the dice,Titku,,,1,attack(3); sfxdamage(target|3); if(d == self.getvar(~deckbonusnumber~)) { givedice(d); },Broken Gadget,MIN3,,GREEN,,,,,,,,excludefromrandomlists,,,,,,,,,,,
Mood Set,Deal [sword]2 damage[;] set the|deck's bonus number to [yellow]<d6>[],Titku,,,1,attack(2); sfxdamage(target|2); self.setvar(~deckbonusnumber~|d);,Broken Gadget,NORMAL,,GRAY,,,,,,,,excludefromrandomlists,,,,,,,,,,,
Dissonance,If [yellow]<var:deckbonusnumber>[] is even: Reroll dice|If [yellow]<var:deckbonusnumber>[] is odd: Gain [shield]2 shield,Titku,,,1,var b = self.getvar(~deckbonusnumber~); var effect = false; if(b % 2 == 0) { givedice(); effect = true; } if(b % 2 == 1) { inflictself(SHIELD|2); sfx(~_shield~); effect = true; } if(!effect) self.textparticle(~No effect!~); /*No effect is a leftover from when the equipment's effects were on 1-3 and 4-6; so 0 wouldn't work.*/,Broken Gadget,NORMAL,,PURPLE,,,,,,,,excludefromrandomlists,,,,,,,,,,,
Beat Box,Receive a Diversion,Titku,,,1,,,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Counterang,Lock all [lock]<d6>s for you|and enemy this fight,Titku,,,1,inflictself(~ncr_lingeringcounter~ + d); inflict(~ncr_lingeringcounter~ + d); sfx(~_lock~); sfx(~_lock~|~~|0.2);,Pinwheel,NORMAL,,,,,,,,,,,,,,,,,,,,,
Rubbing Alcohol,Deal [sword]<d6> dmg[;] +2 [poison]poison|On 1[;] sell this to enemy[;] and|gain [gold]3 on their first use,Titku,,,1,if(d != 1) { attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); } else { sfx(~openchest~); giveenemyequipment(~Rubbing Alcohol@enemy~| false| false); e.temporary_thisturnonly = true; },Dry Cough,MAX5,,GREEN,change_power,complicate,,,,,,showgold,,,,,,,,,,,
Rubbing Alcohol@enemy,Deal [sword]<d6> damage[;]|inflict 2 [poison]poison,Titku,,,1,attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); if(e.timesused == 0) { target.gold += 3; sfx(~pickupgold~); },Dry Cough,MAX5,,GREEN,change_power,complicate,,,,,,showgold|excludefromrandomlists,,,,,,,,,,,
Rubbing Alcohol_upgraded,Deal [sword]<d6> dmg[;] +2 [poison]poison|On 1[;] sell this to enemy[;] and|gain [gold]4 on their first use,Titku,,,1,if(d != 1) { attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); } else { sfx(~openchest~); giveenemyequipment(~Rubbing Alcohol@enemy+~| false| false); e.temporary_thisturnonly = true; },Dry Cough,NORMAL,,GREEN,,,,,,,,showgold,,,,,,,,,,,
Rubbing Alcohol@enemy_upgraded,Deal [sword]<d6> damage[;]|inflict 2 [poison]poison,Titku,,,1,attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); if(e.timesused == 0) { target.gold += 4; sfx(~pickupgold~); },Dry Cough,NORMAL,,GREEN,,,,,,,,showgold|excludefromrandomlists,,,,,,,,,,,
Polearm,Deal [sword]<d6> damage,Titku,,,2,attack(d); sfxdamage(target|d);,Rust Monster,MAX3|FREE3,,ORANGE,reducesize,change_power,,,,,,,,,,,,,,,,,
Polearm_downgraded,Deal [sword]<d6> damage,Titku,,,2,attack(d); sfxdamage(target|d);,Rust Monster,MAX2|FREE2,,ORANGE,,,,,,,,,,,,,,,,,,,
Polearm_weakened,Deal [sword]<d6> damage,Titku,,,1,attack(d); sfxdamage(target|d);,Rust Monster,MAX2|FREE2,,ORANGE,,,,,,,,,,,,,,,,,,,
Jugglenaut,On 1-3[;] reroll the dice|On 4-6[;] do [sword]<d6> damage,Titku,,,2,/*todo lol*/,,NORMAL,,RED,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Greed's Gullet,Cost [gold]1[]: +[heart]1 max HP,Eve,Intended as an Inventor item. More balanced as +2 max HP; perhaps? -Black Widow [p.s.: this used to be tempname10 -gost],,1,if(self.gold >= 1) { self.gold--; self.maxhp++; self.hp++; sfx(~levelup~); sfx(~pickupgold~|~~|0.2); } else { self.textparticle(~Can't afford!~); },,NORMAL,,RED,change_power,change_power,,,,YES,,showgold,,,,,,,,,,,
Greed's Gullet_upgraded,Cost [gold]1[]: +[heart]1 max HP[;]|and get a new dice,Eve & Black Widow,,,1,if(self.gold >= 1) { self.gold--; self.maxhp++; self.hp++; sfx(~levelup~); sfx(~pickupgold~|~~|0.2); givedice(); } else { self.textparticle(~Can't afford!~); },,NORMAL,,RED,,,,,,YES,,showgold,,,,,,,,,,,
Greed's Gullet_downgraded,Cost [gold]1[]: +[heart]1 max HP,Eve & Black Widow,,,1,if(self.gold >= 1) { self.gold--; self.maxhp++; self.hp++; sfx(~levelup~); sfx(~pickupgold~|~~|0.2); } else { self.textparticle(~Can't afford!~); },,EVEN,,RED,,,,,,YES,,showgold,,,,,,,,,,,
Autoshovel,On 6[;] inflict [weaken]Weaken|<evar:weakencount>|,Eve & Black Widow,Changing this to be three-use and involve doequipmentaction was my idea & execution. God; what a nerd-snipe. -Black Widow,,2,inflict(WEAKEN|e.getvar(~weakencount~)); sfx(~_weaken~);,Guitar Solo,,,ORANGE,reducesize,change_power,,,3,,,,,,,,,,e.resetvar(~weakencount~); var weaken = 0; var last = self.lastequipmentused; if(last != null && last.getslots().length > 0) { if(last.countdown > 0 && last.dicehistory.length > 0) { for(dice in last.dicehistory) { if(dice.basevalue == 6) { weaken++; } } } else { if(last.assigneddice.length > 0) { for(dice in last.assigneddice) { if(dice != null) { if(dice.basevalue == 6) { weaken++; } } } } } if(weaken > 0) { e.setvar(~weakencount~|weaken); e.doequipmentaction(self|target|e.castdirection|[]|0|true); self.lastequipmentused = e; } },,,,
Autoshovel_downgraded,Inflict [weaken]Weaken,,,,2,inflict(WEAKEN); sfx(~_weaken~);,Guitar Solo,REQUIRE6,,ORANGE,,,,,,,,,,,,,,,,,,,
Autoshovel_weakened,Inflict [weaken]Weaken,,,,1,inflict(WEAKEN); sfx(~_weaken~);,Guitar Solo,REQUIRE6,,ORANGE,,,,,,,,,,,,,,,,,,,
Baseball Glove,Roll a 6|(Each turn[;] throw lowest dice),,,,1,givedice(6);,Conformity,NORMAL,,GREEN,change_power,change_power,,,,YES,,,,,,,e.animate(~flashandshake~); var lowest = 7; for(dice in self.dicepool) if(dice.available() && dice.basevalue < lowest) lowest = dice.basevalue; var dicebackup = self.dicepool.copy(); var lowestonly = []; for(dice in self.dicepool) if(dice.available() && dice.basevalue == lowest) lowestonly.push(dice); self.dicepool = lowestonly; throwdice(); self.dicepool = dicebackup;,,,,,,
Baseball Glove_downgraded,Roll a 5|(Each turn[;] throw lowest dice),,,,1,givedice(5);,Conformity,NORMAL,,GREEN,,,,,,YES,,,,,,,e.animate(~flashandshake~); var lowest = 7; for(dice in self.dicepool) if(dice.available() && dice.basevalue < lowest) lowest = dice.basevalue; var dicebackup = self.dicepool.copy(); var lowestonly = []; for(dice in self.dicepool) if(dice.available() && dice.basevalue == lowest) lowestonly.push(dice); self.dicepool = lowestonly; throwdice(); self.dicepool = dicebackup;,,,,,,
Baseball Glove_upgraded,Roll a 6[;] inflict [lock]Lock|(Each turn[;] throw lowest dice),,,,1,givedice(6); inflict(LOCK);,Conformity,NORMAL,,GREEN,,,,_lock,,NO,,,givedice(6);,,,,e.animate(~flashandshake~); var lowest = 7; for(dice in self.dicepool) if(dice.available() && dice.basevalue < lowest) lowest = dice.basevalue; var dicebackup = self.dicepool.copy(); var lowestonly = []; for(dice in self.dicepool) if(dice.available() && dice.basevalue == lowest) lowestonly.push(dice); self.dicepool = lowestonly; throwdice(); self.dicepool = dicebackup;,,,,,,
Sniper Rifle,[sword]7. If overfilled[;] take [sword]7.|[gray](Reuseable),,,,2,var dicehistory = runscript(~getfixeddh~|[e]); var sum = 0; for(i in 0...dicehistory.length) { sum += dicehistory[i].basevalue; if(sum >= e.countdown) { break; } } attack(7); sfxdamage(target|7); if(sum - e.countdown > 0) { attackself(7); sfxdamage(self|7); },,COUNTDOWN,7,RED,reducesize,removereusable,,,-1,,,,,e.setvar(~sourceequipment~|e);,e.resetvar(~sourceequipment~); e.resetvar(~dicehistory~);,e.setvar(~sourceequipment~|e); ,,,,,,runscript(~fixfurydh~|[e]);,
Comically Large Spoon,Do [sword]<d6> damage. Reroll|remaining dice above <d6>,Black Widow,Temp name. -Black Widow,,2,/*todo!!!*/,,NORMAL,,RED,,,,,,,,,,,,,,,,,,,
Break the Mold,Do [sword]<d6> damage[;]|inflict [silence]Silence,name by black widow; effect by bert,Initially for the More Swaps mod; as a swap of Shooting Star. (Think about it.) -Black Widow,,2,attack(d); sfxdamage(target|d); inflict(~ncr_silence~); sfx(~_silence~);,,ODD,,BRIGHTCYAN,,,,,,,,,,,,,,,,,,,
Getaway Car,Deal [sword]<d6>[;] gain [car]1 car.|Cost [car]2[]: double damage.,Titku,,,2,,,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Combo Sword,Deal [sword]<d6> damage[;] +1 if|<d6> was used here last (<evar:lastuseddice>),Black Widow,,,2,,,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Flesh in Armour,Do [sword]2 damage[;] on 3[;]|also gain [shield]2 shield,Black Widow,,,2,attack(2); sfxdamage(target|2); if(d == 3) { inflictself(SHIELD|2); sfx(~_shield~|~~|0.2); },,NORMAL,,ORANGE,,,,,,,,,if(d == 3) { inflictself(SHIELD|2); sfx(~_shield~); },,,,,,,,,,
Comically Large Spoon_upgraded,Do [sword]<d6> damage. Reroll|remaining dice below <d6>,,Temp name. -Black Widow,,2,/*todo!!!*/,,NORMAL,,RED,,,,,,,,,,,,,,,,,,,
Void,No effect when used|Turn start: roll three 1s[;]|remove from your hand,name by black widow; effect by bert,,,2,,,NORMAL,,PURPLE,,,,,,YES,,,,,,,if(e.onscreen()) { e.animate(~flashandshake~); givedice([1|1|1]); e.animate(~error~); },,,,,,
Void Old,No effect when used|Turn start: roll three 0s[;]|remove from your hand,name by black widow; effect by bert,,,2,,,NORMAL,,PURPLE,,,,,,YES,,excludefromrandomlists,,,,,if(e.onscreen()) { e.animate(~flashandshake~); givedice([1|1|1]); var zeroes = [for(i in 1...4) self.dicepool[self.dicepool.length - i]]; for(dice in zeroes) { dice.modifier = -1; dice.showoverlayimage = true; dice.overlayimage_xoff = 0; dice.overlayimage_yoff = 0; dice.overlayimage_animate = 1; dice.overlayimage_repeat = true; var sprite = new displayobjects.HaxegonSprite(0|0|~dice0~|0|0); dice.graphic.overlayimage = sprite; } e.doequipmentaction(self|target|1|[]|0|true); },,,,,,
Comes and Goes@large,Do [sword]3 damage|Slot flips each turn,bert,,,2,attack(3);,,MIN3,,BRIGHTCYAN,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Comes and Goes@small,Do [sword]3 damage|Slot flips each turn,,,,2,attack(3);,,MAX4,,BRIGHTCYAN,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Bright Noise,Get a new dice you don't|have right now[;] next turn,,Delayed Innovation. I'm a genius.,,1,var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) { givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); inflictself(~stash~+notseen[0]); inflictself(~ncr_lightswitch~+notseen[0]); sfx(~magic~); },,NORMAL,,,,,,,,YES,,,,,,,,,,,,,
Stealth Strike,Deal [sword]15 damage|Turn start: reset countdown[;]|then remove from hand,Eve,rewritten by gost. formerly 'Deal [sword]15 damage|Turn start: remove from|hand[;] reset countdown',2,1,attack(15); sfxdamage(target|15);,,COUNTDOWN,15,,,,,,,,,,,,,,if(e.onscreen()) { e.remainingcountdown = e.maxcountdown; e.animate(~error~); },,,,,,
tempname11,receive no more cards this turn,Eve,,,2,/*gethandsize and put it somewhere; Deck.sethandsize(0); at end of turn sethandsize to old hand size;*/,,,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Trident Base,Inflict [ice]Freeze + [shock]Shock|On 5 or 6[;] +1 to either,,Make this a Thief item; since it's based on the balance between Wrecking Ball and Crowbar; and how Trident is like Wrecking Ball with a different effect. -Widow,,1,var iceamt = 1; var shockamt = 1; if(d >= 5) { if(chance(50)) iceamt++; else shockamt++; } inflict(SHOCK|shockamt); inflict(ICE|iceamt); sfx(~_ice~); sfx(~_shock~); if(shockamt > 1) { sfx(~_shock~|~~|0.1); } if(iceamt > 1) { sfx(~_ice~|~~|0.1); },,NORMAL,,BRIGHTCYAN,change_power,change_power,,,,,,,,,,,,,,,,,
Trident Base_upgraded,Inflict [ice]Freeze + [shock]Shock|On 5 or 6[;] +1 to either|,gost,,,1,var iceamt = 1; var shockamt = 1; if(d >= 5) { if(chance(50)) iceamt++; else shockamt++; } inflict(SHOCK|shockamt); inflict(ICE|iceamt); sfx(~_ice~); sfx(~_shock~); if(shockamt > 1) { sfx(~_shock~|~~|0.1); } if(iceamt > 1) { sfx(~_ice~|~~|0.1); },,NORMAL,,BRIGHTCYAN,,,,,2,,,,,,,,,,,,,,
Trident Base_downgraded,Inflict [ice]Freeze + [shock]Shock,gost,,,1,inflict(SHOCK); inflict(ICE); sfx(~_ice~); sfx(~_shock~);,,MAX3,,BRIGHTCYAN,,,,,,,,,,,,,,,,,,,
Snapshot@ncrmod,Copy all other dice|over to next turn|[gray](once per battle),gost,,,2,var runscript(~getavaildice~|[self|true]); if(dicevals.length > 0) { inflictself(~illuminate~); for(v in dicevals) inflictself(~stash~ + v); },,MIN4,,YELLOW,,,,,,YES,YES,,,,,,,,,,,,
Feghoot,If this is the only card in|your hand[;] do [sword]10 damage,,Based on alpha version of Punchline.,2,1,var onscreencount = 0; for(eq in self.equipment) if(eq != null && eq.skillcard == ~~ && eq.onscreen() && eq.equipalpha > 0) onscreencount++; if(onscreencount == 0) { attack(10); sfxdamage(target|10); } else { self.textparticle(~No effect!~); },,EVEN,,ORANGE,,,,,,,,,,,,,,,,,,,
The Chain of Chance,Deal [sword]<d6> damage. On 6[;]|make [vanish]Fade more effective,,Conceptualized by Gost; implemented by Titku,,2,attack(d); sfxdamage(target|d); if(d == 6) { inflict(~ncr_chanced~); sfx(~upgradeequipment~); },,NORMAL,,PINK,,,,,,,,,,,,,,,,,,,
High Roller,Roll <d6> dice,Titku,,,2,if(d > 0) { givedice([for(i in 0...d) rand([1|2|3|4|5|6])]); },Cargo Lift,DOUBLES|DOUBLES,,GREEN,,,,,,YES,,,,,,,,,,,,,
High Roller_upgraded,Roll up to <double> dice,Titku,,,2,if(d > 0) { var r = (rand([for(i in 0...d) i]) + 1) * 2; givedice([for(i in 0...r) rand([1|2|3|4|5|6])]); },Cargo Lift,DOUBLES|DOUBLES,,GREEN,change_power,change_power,,,,YES,,,,,,,,,,,,,
High Roller_downgraded,Roll up to <d6> dice,Titku,,,2,if(d > 0) { var r = rand([for(i in 0...d) i]) + 1; givedice([for(i in 0...r) rand([1|2|3|4|5|6])]); },Cargo Lift,DOUBLES|DOUBLES,,GREEN,,,,,,YES,,,,,,,,,,,,,
Stock Market,[]+1 to dice value for|every 2 gold you have ([gold]<gold>),Titku,,,2,,Auction,NORMAL,,YELLOW,,,,,,,,,,,,,,,,,,,
tempname12,Odd turns: duplicate dice|Even turns: [sword]<d6> dmg,Titku,,,2,/*upgrade has a free1; duplicate returns a 1 along wtih the other dices.*/,,NORMAL,,GREEN,,,,,,,,,,,,,,,,,,,
Paranoimia,Inflict [vanish]1 fade each|turn for the rest of battle,Titku,,,1,,,,,,,,,,,,,,,,,,,,,,,,
Hypothermia,Inflict [ice]1 freeze each|turn for the rest of battle,Titku,,,1,,,,,,,,,,,,,,,,,,,,,,,,
Pyromania,Inflict [fire]1 burn each|turn for the rest of battle,Titku,,,1,,,,,,,,,,,,,,,,,,,,,,,,
Who's Afraid of Scale?,Do [sword]6 damage. Reduce|max. countdown by 1 on use,Black Widow,Coloured yellow because it's a sidegrade of Crossbow; the way Battle Axe is a sidegrade of Sword. (If I had to assign the actual Art of Noise song Who's Afraid of Scale a color; it would probably be some shade of orange.) damage changed from 8 to 6 by bert,,2,attack(8); sfxdamage(target|8); e.maxcountdown--;,,COUNTDOWN,18,YELLOW,,,,,,,,,,,,,,,,,,,
Ninemare,Roll 9 dice,Black Widow,made normal|normal|normal|normal by gost; previously normal|normal (still must equal 9),,2,,,NORMAL|NORMAL|NORMAL|NORMAL,9,,,,,,,,,,,,,,,,,,,,
Quarter Staff,Do [sword]6 damage|Gain [gold]25 gold|Destroy this card,Test,,,2,attack(6); sfxdamage(target|6); sfx(~pickupgold~); e.name = ~pleasedeleteme~; removeequipment(~pleasedeleteme~); if(self.layout == ~DECK~) { var deleteindex = -1; for(i in 0...Deck.getcards(~all~).length) if(Deck.getcards(~all~)[i].equipment == e) { deleteindex = i; break; } Deck.getcards(~all~)[deleteindex].delete(); },,COUNTDOWN,60,GRAY,change_power,change_power,,jesterdelete,,,,cannotreuse,,,,,,,,,,e.preventdefault = true; e.maintainfury = true,
Quarter Staff_downgraded,Do [sword]3 damage|Gain [gold]25 gold|Destroy this card,Test,,,2,attack(6); sfxdamage(target|6); sfx(~pickupgold~); e.name = ~pleasedeleteme~; removeequipment(~pleasedeleteme~); if(self.layout == ~DECK~) { var deleteindex = -1; for(i in 0...Deck.getcards(~all~).length) if(Deck.getcards(~all~)[i].equipment == e) { deleteindex = i; break; } Deck.getcards(~all~)[deleteindex].delete(); },,COUNTDOWN,60,GRAY,,,,jesterdelete,,,,cannotreuse,,,,,,,,,,e.preventdefault = true; e.maintainfury = true,
Quarter Staff_upgraded,Do [sword]6 damage|Gain [gold]25 gold|Destroy this card,Test,,,2,attack(6); sfxdamage(target|6); sfx(~pickupgold~); e.name = ~pleasedeleteme~; removeequipment(~pleasedeleteme~); if(self.layout == ~DECK~) { var deleteindex = -1; for(i in 0...Deck.getcards(~all~).length) if(Deck.getcards(~all~)[i].equipment == e) { deleteindex = i; break; } Deck.getcards(~all~)[deleteindex].delete(); },,COUNTDOWN,50,GRAY,,,,jesterdelete,,,,cannotreuse,,,,,,,,,,e.preventdefault = true; e.maintainfury = true,
Quarter Staff_weakened,Do [sword]3 damage|Gain [gold]25 gold|Destroy this card,Test,,,2,attack(6); sfxdamage(target|6); sfx(~pickupgold~); e.name = ~pleasedeleteme~; removeequipment(~pleasedeleteme~); if(self.layout == ~DECK~) { var deleteindex = -1; for(i in 0...Deck.getcards(~all~).length) if(Deck.getcards(~all~)[i].equipment == e) { deleteindex = i; break; } Deck.getcards(~all~)[deleteindex].delete(); },,COUNTDOWN,50,GRAY,,,,jesterdelete,,,,cannotreuse,,,,,,,,,,e.preventdefault = true; e.maintainfury = true,
Lump,Roll a 1|Return the dice,Test,,,1,givedice([d|1]);,,EVEN,,GREEN,change_power,change_power,,,,,,,,,,,,,,,,,
Lump_upgraded,Roll a 2|Return the dice,Test,,,1,givedice([d|2]);,,EVEN,,GREEN,,,,,,,,,,,,,,,,,,,
Lump_downgraded,Roll a 1,Test,,,1,givedice(1);,,EVEN,,GREEN,,,,,,,,,,,,,,,,,,,
Quasipick,Roll two low dice (1-3),Test,,,1,givedice([rand([1|2|3])|rand([1|2|3])]);,,MIN4,,GREEN,increaserange,decreaserange,,,,,,,,,,,,,,,,,
Juggling Knives,Do [sword]<d6> damage. On|last use[;] roll 2 dice,Test,,,2,attack(d); sfxdamage(target|d); if(e.usesleft == 0) { givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); },,MAX3,,RED,,,,,,,,,,,,,,,,,,,
Juggling Knives_upgraded,Do [sword]<d6> damage. On|last use[;] roll 3 dice,Test,,,2,attack(d); sfxdamage(target|d); if(e.usesleft == 0) { givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); },,MAX3,,RED,,,,,,,,,,,,,,,,,,,
Juggling Knives_downgraded,Do [sword]<d6> damage. On|last use[;] roll 1 dice,Test,,,2,attack(d); sfxdamage(target|d); if(e.usesleft == 0) { givedice(); },,MAX3,,RED,,,,,,,,,,,,,,,,,,,
Joust,Deal [sword]<d6> damage[;]|gain [reduce]3 reduce,Black Widow,,,2,attack(d); sfxdamage(target|d); inflictself(REDUCE|3);,,NORMAL,,ORANGE,,,,_shield,,,,finale,,,,,,,,,,,
Enamoured Self Applause,Recover [heal]<d6> health[;]|gain [confuse]<d6> limit charge|[gray](once per battle),Black Widow,,,2,attackself(-d); sfx(~_heal~); if(self.limitvalue != null && self.limitmax != null) { sfx(~_cure~|~~|0.1); self.limitvalue += d; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } },,MAX3|MAX3,,ORANGE,,,,,,,,finale,,,,,,,,,,,
Vaporous Broadsword,[]+[sword]2 to all attacks|until dismissed.,Black Widow,,,2,,,COUNTDOWN|FREE2,6,RED,,,,,,,,,,,,,,,,,,,
Geradedice,[]+1 to dice value|On even[;] +2 instead,Black Widow,,,1,,,NORMAL,,GREEN,,,,,,,,,,,,,,,,,,,
tempname13,Roll a dice higher than or|equal to the flipped dice,Black Widow,,,1,,,NORMAL,,GREEN,,,,,,,,,,,,,,,,,,,
tempname14,[]+1 to dice value|[]+1 to limit charge,Black Widow,,,1,,,ODD,,YELLOW,,,,,,,,,,,,,,,,,,,
tempname15,[]-1 to dice value|Drain [heart]1 health,Black Widow,jackeea has this ad verbum lol sorry. -gost,,1,,,EVEN,,RED,,,,,,,,,,,,,,,,,,,
Uppercut,Do [sword]2 damage[;]|+2 to dice value,Black Widow,Not intended for Jester.,,2,,,NORMAL,,RED,,,,,,,,,,,,,,,,,,,
Low Jab,Do [sword]4 damage[;]|-4 to dice value,Test,,,2,,,MIN5,,RED,,,,,,,,,,,,,,,,,,,
tempname16,Increase hand size to 4.|Roll a new dice.,Black Widow,,,2,,,NORMAL|NORMAL,,,,,,,,,,jesteronly,,,,,,,,,,,
tempname17,While next to another|tempname17[;] add 1 damage|to all attacks this turn.,Black WIdow,,,2,,,,,,,,,,,,,,,,,,,,,,,,
tempname18,Inflict [silence]Silence,Black Widow,,,2,,,EVEN,,ORANGE,,,,,,,,finale,,,,,,,,,,,
tempname20,Next turn[;] snap all of|the cards you start with,Test,Description rewritten by everyone's favorite arachnid. Previously 'Next turn[;] use the first|cards you draw for free.' also countdown decided by gost,,2,,,COUNTDOWN,12,ORANGE,,,,,,,,finale,,,,,,,,,,,
tempname21,Get two 6s next turn,Black Widow,,,2,,,DOUBLES|DOUBLES,,ORANGE,,,,,,,,finale,,,,,,,,,,,
Super Spear,Do [sword]<d6>[;] stash both dice|[gray](once per battle) ,Black Widow,,,1,,,REQUIRE6|REQUIRE6,,ORANGE,,,,,,,,finale,,,,,,,,,,,
Lucky Sword,Do a random amount of|damage between the dice[;]|and return both dice,Witness,Description rewritten by everyone's yet favorite arachnid. Previously 'Do damage between the|larger and smaller dice|Return both dice'.,,2,,,NORMAL|NORMAL,,RED,,,,,,,,,,,,,,,,,,,
Gloves,Rest of turn: 50% chance to|get [recycle]Re-Equip before item use,Black Widow,,,1,,,COUNTDOWN,10,GREEN,,,,,,,,,,,,,,,,,,,
tempname22,Get two blessings at|the start of next turn,Black Widow,,,2,,,,,ORANGE,,,,,,,,finale,,,,,,,,,,,
Boop Boop,Do [sword]2 damage. On 1[;]|drain [heart]1 health instead,Test,,,1,,,NORMAL,,PURPLE,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Bop Boop,Do [sword]6 damage,Test,,,2,,,MIN3|NORMAL,,ORANGE,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Bop Boop_upgraded,Do [sword]7 damage[;]|return the 2nd dice,Test,,,2,,,MIN3|NORMAL,,ORANGE,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Volt Tackle,Do [shock]<d6> dmg. On dice not|rolled on turn start[;] inflict [shock]1 paralysis,Witness,,,2,,,,,,,,,,,,,,,,,,,,,,,,
Thousand Arrows,Do [weaken]<d6> dmg. On dice not|rolled on turn start[;] inflict [weaken]1 restraint,Witness,,,2,,,,,,,,,,,,,,,,,,,,,,,,
Sawtooth,Returns a 6 and a 1,Witness,beta version of saw wave,,1,givedice(7);,Stardust,DOUBLES|DOUBLES,,GREEN,change_power,change_power,,,0,YES,NO,,1,,,,,,,,,,
Sawtooth_upgraded,Returns two sixes,Witness,,,1,givedice(12);,Stardust,DOUBLES|DOUBLES,,GREEN,,,,,0,YES,NO,,,,,,,,,,,,
Sawtooth_downgraded,Returns two ones,Witness,,,1,givedice([1|1]);,Stardust,DOUBLES|DOUBLES,,GREEN,,,,,0,YES,NO,,,,,,,,,,,,
Hall of Hammers,[]+1 shock this fight,Titku,,,1,//inflict lingering shock or something,,REQUIRE6,,YELLOW,,,,,,,,,,,,,,,,,,,
tempname23,Get three new dice,Abagail,give this to jester,,2,givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,,MIN4|MIN4,,GREEN,,,,,,YES,,,,,,,,,,,,,
Hall of Daggers,[]+[sword]<d6> damage this fight,Abagail,stupid,,2,//should: 1. cast forward; 2. do d6 damage; 3. give you a 'lingering damage' status regardless of whether dodged or not that makes it so you automatically do that amount of damage to the enemy at the start of each turn,,MAX3,,RED,,,,,,,,,,,,,,,,,,,
Backbeat,Do [sword]1 per [sword]2 damage|dealt last turn ([sword]<var:halfdmglastturn>),Titku,Art of Noise my beloved.,,1,,,COMBINATION,,GREEN,change_power,change_power,,,,,,excludefromrandomlists|combination:11,,,,,,,,,,,
Beatback,Do [sword]1 per [sword]1 damage|dealt last turn ([sword]<var:dmglastturn>),Titku,,,2,,,COMBINATION,,GREEN,change_power,change_power,,,,,,excludefromrandomlists|combination:11,,,,,,,,,,,
Backbeat_upgraded,Do [sword]1 per [sword]2 damage|dealt last turn ([sword]<var:halfdmglastturn>),Titku,,,1,,,COMBINATION,,GREEN,,,,,,,,excludefromrandomlists|combination:77,,,,,,,,,,,
Beatback_upgraded,Do [sword]1 per [sword]1 damage|dealt last turn ([sword]<var:dmglastturn>),Titku,,,2,,,COMBINATION,,GREEN,,,,,,,,excludefromrandomlists|combination:77,,,,,,,,,,,
Backbeat_downgraded,Do [sword]1 per [sword]3 damage|dealt last turn ([sword]<var:thirddmglastturn>),Titku,,,1,,,COMBINATION,,GREEN,,,,,,,,excludefromrandomlists|combination:11,,,,,,,,,,,
Beatback_downgraded,Do [sword]1 per [sword]2 damage|dealt last turn ([sword]<var:halfdmglastturn>),Titku,,,2,,,COMBINATION,,GREEN,,,,,,,,excludefromrandomlists|combination:11,,,,,,,,,,,
Backbeat_weakened,Do [sword]1 per [sword]3 damage|dealt last turn ([sword]<var:thirddmglastturn>),Titku,,,1,,,COMBINATION,,GREEN,,,,,,,,excludefromrandomlists|combination:77,,,,,,,,,,,
Beatback_weakened,Do [sword]1 per [sword]2 damage|dealt last turn ([sword]<var:halfdmglastturn>),Titku,,,2,,,COMBINATION,,GREEN,,,,,,,,excludefromrandomlists|combination:77,,,,,,,,,,,
tempname24,If limit was not used this turn[;]|do damage equal to missing|limit break charge,Titku,,,1,,,DOUBLES|DOUBLES,,RED,,,,,,,,,,,,,,,,,,,
The Machine,Passive: Inflict 2 shock|Saps half your limit charge|at the end of each turn,Abagail,,,1,//wip,,,,GRAY,,,,,,,,,,,,,,,,,,,
tempname25,Do [sword]<d6> damage|+2 for each turn between|first dice and last dice,Titku,Assumes that for a COMBINATION slot; d (and <d6>) is set to the total of alll dice,,2,trace(e.dicehistory); trace(e.assigneddice);,,COMBINATION,,,,,,,,,,excludefromrandomlists|combination:77,,,,,,,,,,,
Triangle,Inflict [weaken]3 weaken|Return all dice,Titku,Making items for a super unfilled niche is fun because no idea has been done yet! Cliches don't even exist. I could make the most cliched item ever and no-one would know until way later.,,1,,,COMBINATION,,ORANGE,change_power,change_power,,,,,,combination:333,,,,,,,,,,,
Triangle_upgraded,Inflict [weaken]3 weaken|Return all dice,Titku,,,1,,,COMBINATION,,ORANGE,,,,,,,,combination:777,,,,,,,,,,,
Triangle_downgraded,Deal [weaken]3 damage|Return all dice,Titku,,,1,,,COMBINATION,,ORANGE,,,,,,,,combination:333,,,,,,,,,,,
Triangle_weakened,Deal [weaken]3 damage|Return all dice,Titku,,,1,,,COMBINATION,,ORANGE,,,,,,,,combination:777,,,,,,,,,,,
Combo Breaker,Reset all combination|items filled this turn|Do [sword]2 per dice reset,Titku,No clue if this is even possible!,,1,,,MIN5,,,,,,,,,,,,,,,,,,,,,
Jester's Glove,Take [sword]<d6> damage|Snap an item next turn,gost,On the fence about whether to make this return the dice. This is essentially weird stash-dice-manip with a damage penalty. Maybe that's fine on its own; but is it really powerful enough to justify the chance to take 6 damage and delay its effect by 1 turn? -Widow,1,1,attackself(d); sfxdamage(self|d); jinx(~Jester's Glove~|~[glove]snap an equipment~|~[glove]Snap an equipment~|~inflict(\~ncr_snap\~); sfx(\~jester_snap\~);~|self|self|1|d); sfx(~_thinghappens~|~~|0.15);,,NORMAL,,ORANGE,change_power,change_power,,,,YES,,,,,,,,,,,,,
Jester's Glove_upgraded,Take [sword]<d6> damage|Snap an item next turn|On 6[;] take no damage,gost,Description rewritten by everyone's favorite arachnid. Previously 'Take [sword]<d6>[;] snap next turn|On 6[;] take no damage'.,,1,if(d != 6) { attackself(d); sfxdamage(self|d); } jinx(~Jester's Glove~|~[glove]snap an equipment~|~[glove]Snap an equipment~|~inflict(\~snap\~); sfx(\~jester_snap\~);~|self|self|1|d); sfx(~_thinghappens~|~~|d != 6 ? 0.15 : 0);,,NORMAL,,ORANGE,,,,,,YES,,,,,,,,,,,,,
Jester's Glove_downgraded,Take [sword]<d6> damage|Snap an item next turn,gost,,,1,attackself(d); sfxdamage(self|d); jinx(~Jester's Glove~|~[glove]snap an equipment~|~[glove]Snap an equipment~|~inflict(\~snap\~); sfx(\~jester_snap\~);~|self|self|1|d); sfx(~_thinghappens~|~~|0.15);,,MIN3,,ORANGE,,,,,,YES,,,,,,,,,,,,,
Time Travel,Use a copy of the last|equipment you used,gost,this is an unfinished morefluff item that i was going to steal and make work for christmas special; then i realized reuseables exist and i got bored and stopped,,1,var l = null; for(eq in self.equipmenthistory){if(eq.name != ~Time Travel~){l = eq;};}; var s = new elements.Equipment(l.name); s.usesleft= 0; s.temporary_thisturnonly = true; self.equipment.push(s); trace(l.assigneddice); if(l.assigneddice.length > 0) { for(x in l.assigneddice){if(x!=null){var nd = new elements.Dice(); nd.basevalue = x.basevalue; self.dicepool.push(nd); s.assigndice(nd);}; }; }; if(l.dicehistory.length > 0) { for(x in l.dicehistory){if(x!=null){var nd = new elements.Dice(); nd.basevalue = x.basevalue; self.dicepool.push(nd); s.dicehistory.push(nd); nd.assigned = s;}; }; }; /*s.x = 3840/2 - s.width/2; s.y = 2160/2-s.height/2;*/ s.x = e.getvar(~oldx~) - ((s.width - e.width) / 2); s.y = e.getvar(~oldy~) - ((s.height - e.height) / 2); s.animate(~flashandshake~); s.doequipmentaction(self|target|s.castdirection|s.assigneddice|0|false); if(s.remainingcountdown > 0) s.remainingcountdown = 0; sfx(~_recycle~);,,NORMAL|NORMAL,,GREY,change_power,change_power,,,0,YES,NO,unfinished|excludefromrandomlists,,e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](None[;] [dice]N/A)~;,e.fulldescription = ~Use a copy of the last[newline]equipment you used~;,var l = null; if(self.equipmenthistory.length > 0) { for(eq in self.equipmenthistory){if(eq != null && !eq.temporary_thisturnonly && eq.name != ~Time Travel~){l = eq;};}; if(l != null) { trace(~eqhistory: ~ + self.equipmenthistory); trace(~L: ~ + l); var s = ~[openbracket]~; var dicelist = []; if(l.assigneddice.length > 0) { for(d in l.assigneddice){if(d!=null){dicelist.push(d.basevalue);};};}; if(l.dicehistory.length > 0) { for(d in l.dicehistory){if(d!=null){dicelist.push(d.basevalue);};};}; s+=dicelist.join(~[;] ~); s+=~[closebracket]~; e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](~ + l.name + ~[;] [dice]~ + s + ~)~; } },,,if(!onlimit && self.equipmenthistory.length > 0) { var l = null; for(eq in self.equipmenthistory){if(eq != null && !eq.temporary_thisturnonly && eq.name != ~Time Travel~){l = eq;};}; if(l != null) { trace(~eqhistory: ~ + self.equipmenthistory); trace(~L: ~ + l); var s = ~[openbracket]~; var dicelist = []; if(l.assigneddice.length > 0) { for(d in l.assigneddice){if(d!=null){dicelist.push(d.basevalue);};};}; if(l.dicehistory.length > 0) { for(d in l.dicehistory){if(d!=null){dicelist.push(d.basevalue);};};}; s+=dicelist.join(~[;] ~); s+=~[closebracket]~; e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](~ + l.name + ~[;] [dice]~ + s + ~)~; e.animate(~flash~); } },e.setvar(~oldx~|e.x); e.setvar(~oldy~|e.y);,,,
Time Travel_upgraded,Use a copy of the last|equipment you used,,,,1,var l = null; for(eq in self.equipmenthistory){if(eq.name != ~Time Travel~){l = eq;};}; var s = new elements.Equipment(l.name); s.usesleft= 0; s.temporary_thisturnonly = true; self.equipment.push(s); trace(l.assigneddice); if(l.assigneddice.length > 0) { for(x in l.assigneddice){if(x!=null){var nd = new elements.Dice(); nd.basevalue = x.basevalue; self.dicepool.push(nd); s.assigndice(nd);}; }; }; if(l.dicehistory.length > 0) { for(x in l.dicehistory){if(x!=null){var nd = new elements.Dice(); nd.basevalue = x.basevalue; self.dicepool.push(nd); s.dicehistory.push(nd); nd.assigned = s;}; }; }; /*s.x = 3840/2 - s.width/2; s.y = 2160/2-s.height/2;*/ s.x = e.getvar(~oldx~) - ((s.width - e.width) / 2); s.y = e.getvar(~oldy~) - ((s.height - e.height) / 2); s.animate(~flashandshake~); s.doequipmentaction(self|target|s.castdirection|s.assigneddice|0|false); if(s.remainingcountdown > 0) s.remainingcountdown = 0; sfx(~_recycle~);,,NORMAL,,GREY,,,,,0,YES,NO,unfinished|excludefromrandomlists,,e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](None[;] [dice]N/A)~;,e.fulldescription = ~Use a copy of the last[newline]equipment you used~;,var l = null; if(self.equipmenthistory.length > 0) { for(eq in self.equipmenthistory){if(eq != null && !eq.temporary_thisturnonly && eq.name != ~Time Travel~){l = eq;};}; if(l != null) { trace(~eqhistory: ~ + self.equipmenthistory); trace(~L: ~ + l); var s = ~[openbracket]~; var dicelist = []; if(l.assigneddice.length > 0) { for(d in l.assigneddice){if(d!=null){dicelist.push(d.basevalue);};};}; if(l.dicehistory.length > 0) { for(d in l.dicehistory){if(d!=null){dicelist.push(d.basevalue);};};}; s+=dicelist.join(~[;] ~); s+=~[closebracket]~; e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](~ + l.name + ~[;] [dice]~ + s + ~)~; } },,,if(!onlimit && self.equipmenthistory.length > 0) { var l = null; for(eq in self.equipmenthistory){if(eq != null && !eq.temporary_thisturnonly && eq.name != ~Time Travel~){l = eq;};}; if(l != null) { trace(~eqhistory: ~ + self.equipmenthistory); trace(~L: ~ + l); var s = ~[openbracket]~; var dicelist = []; if(l.assigneddice.length > 0) { for(d in l.assigneddice){if(d!=null){dicelist.push(d.basevalue);};};}; if(l.dicehistory.length > 0) { for(d in l.dicehistory){if(d!=null){dicelist.push(d.basevalue);};};}; s+=dicelist.join(~[;] ~); s+=~[closebracket]~; e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](~ + l.name + ~[;] [dice]~ + s + ~)~; e.animate(~flash~); } },e.setvar(~oldx~|e.x); e.setvar(~oldy~|e.y);,,,
Time Travel_downgraded,Use a copy of the last|equipment you used,,,,1,var l = null; for(eq in self.equipmenthistory){if(eq.name != ~Time Travel~){l = eq;};}; var s = new elements.Equipment(l.name); s.usesleft= 0; s.temporary_thisturnonly = true; self.equipment.push(s); trace(l.assigneddice); if(l.assigneddice.length > 0) { for(x in l.assigneddice){if(x!=null){var nd = new elements.Dice(); nd.basevalue = x.basevalue; self.dicepool.push(nd); s.assigndice(nd);}; }; }; if(l.dicehistory.length > 0) { for(x in l.dicehistory){if(x!=null){var nd = new elements.Dice(); nd.basevalue = x.basevalue; self.dicepool.push(nd); s.dicehistory.push(nd); nd.assigned = s;}; }; }; /*s.x = 3840/2 - s.width/2; s.y = 2160/2-s.height/2;*/ s.x = e.getvar(~oldx~) - ((s.width - e.width) / 2); s.y = e.getvar(~oldy~) - ((s.height - e.height) / 2); s.animate(~flashandshake~); s.doequipmentaction(self|target|s.castdirection|s.assigneddice|0|false); if(s.remainingcountdown > 0) s.remainingcountdown = 0; sfx(~_recycle~);,,EVEN|EVEN,,GREY,,,,,0,YES,NO,unfinished|excludefromrandomlists,,e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](None[;] [dice]N/A)~;,e.fulldescription = ~Use a copy of the last[newline]equipment you used~;,var l = null; if(self.equipmenthistory.length > 0) { for(eq in self.equipmenthistory){if(eq != null && !eq.temporary_thisturnonly && eq.name != ~Time Travel~){l = eq;};}; if(l != null) { trace(~eqhistory: ~ + self.equipmenthistory); trace(~L: ~ + l); var s = ~[openbracket]~; var dicelist = []; if(l.assigneddice.length > 0) { for(d in l.assigneddice){if(d!=null){dicelist.push(d.basevalue);};};}; if(l.dicehistory.length > 0) { for(d in l.dicehistory){if(d!=null){dicelist.push(d.basevalue);};};}; s+=dicelist.join(~[;] ~); s+=~[closebracket]~; e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](~ + l.name + ~[;] [dice]~ + s + ~)~; } },,,if(!onlimit && self.equipmenthistory.length > 0) { var l = null; for(eq in self.equipmenthistory){if(eq != null && !eq.temporary_thisturnonly && eq.name != ~Time Travel~){l = eq;};}; if(l != null) { trace(~eqhistory: ~ + self.equipmenthistory); trace(~L: ~ + l); var s = ~[openbracket]~; var dicelist = []; if(l.assigneddice.length > 0) { for(d in l.assigneddice){if(d!=null){dicelist.push(d.basevalue);};};}; if(l.dicehistory.length > 0) { for(d in l.dicehistory){if(d!=null){dicelist.push(d.basevalue);};};}; s+=dicelist.join(~[;] ~); s+=~[closebracket]~; e.fulldescription = ~Use a copy of the last[newline]equipment you used[newline](~ + l.name + ~[;] [dice]~ + s + ~)~; e.animate(~flash~); } },e.setvar(~oldx~|e.x); e.setvar(~oldy~|e.y);,,,
Tall Cauldron,Reroll each dice used|here (<evar:diceused> dice used),Bert,Named by Black Widow. early concept by diane; see fuck.csv,,2,var dicelist = []; for(i in 0...e.dicehistory.length) { dicelist.push(rand([1|2|3|4|5|6])); } givedice(dicelist);,,COUNTDOWN,4,PURPLE,reducesize,change_power,,,,,,,,,,,,,,,,,e.setvar(~diceused~|e.dicehistory.length);
Tall Cauldron_downgraded,Receive all dice|used here,Black Widow,,,2,givedice(e.dicehistory);,,COUNTDOWN,4,PURPLE,,,,,,,,,,,,,,,,,,,
Tall Cauldron_weakened,Receive all dice|used here,Black Widow,,,1,givedice(e.dicehistory);,,COUNTDOWN,4,PURPLE,,,,,,,,,,,,,,,,,,,
Pedantic Dagger,Do [sword]<d6> dmg. If target HP|now ends in 0[;] +[star]5 limit|[gray](3 uses this turn),Reyder,,,1,,,MAX3,,YELLOW,change_power,change_power,,,3,,,,,,,,,,,,,,
Pedantic Dagger_upgraded,Do [sword]<d6> dmg. If target HP|now ends in 0[;] +[star]5 limit|[gray](Reuseable),Diane,,,1,,,MAX3,,YELLOW,,,,,-1,,,,,,,,,,,,,,
Pedantic Dagger_downgraded,Do [sword]<d6> dmg. If target HP|now ends in 0[;] +[star]5 limit|[gray](3 uses this turn),Reyder,,,1,,,MAX2,,YELLOW,,,,,3,,,,,,,,,,,,,,
Chameleon's Dish,Mimics another item,Reyder?,I forget who this is by. I think Reyder came up with it. -Widow,,1,//Todo: ...everything. Also; maybe this could be able to mimic size 2 items (with less than 4 slots); but resize them to size 1? -Widow,,,,GRAY,change_power,noeffect,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Chameleon's Dish_upgraded,Mimics another item|Always upgraded,Reyder?,,,1,,,,,GRAY,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Eternal Cauldron,Do [sword]1 damage[;] reroll dice|30% chance to fail|[gray](Reuseable),Diane,based on the eternal d6 item from the binding of isaac: repentance,1,1,if(!chance(30)) { givedice(); attack(1); sfxdamage(target|1); } else { self.textparticle(~No effect!~); },,NORMAL,,GRAY,change_power,change_power,,,-1,,,,if(!chance(30)) { givedice(); } else { self.textparticle(~No effect!~); },,,,,,,,,,
Eternal Cauldron_upgraded,Do [sword]1 damage[;] reroll dice|15% chance to fail|[gray](Reuseable),Diane,,,1,if(!chance(15)) { givedice(); attack(1); sfxdamage(target|1); } else { self.textparticle(~No effect!~); },,NORMAL,,GRAY,,,,,-1,,,,if(!chance(15)) { givedice(); } else { self.textparticle(~No effect!~); },,,,,,,,,,
Eternal Cauldron_downgraded,Reroll the dice|30% chance to fail|[gray](Reuseable),Diane,,,1,if(!chance(30)) { givedice(); } else { self.textparticle(~No effect!~); },,NORMAL,,GRAY,,,,,-1,YES,,,,,,,,,,,,,
Wide Cauldron,Do [sword]4 damage[;]|get 4 new dice,Diane,,1,1,attack(4); sfxdamage(target|4); var numlist = [1|2|3|4|5|6]; givedice([rand(numlist)|rand(numlist)|rand(numlist)|rand(numlist)]);,,COMBINATION,,PURPLE,change_power,change_power,,,,,,combination:7777,var numlist = [1|2|3|4|5|6]; givedice([rand(numlist)|rand(numlist)|rand(numlist)|rand(numlist)]);,,,,,,,,,,
Wide Cauldron_upgraded,Do [sword]4 damage[;]|get 4 new dice|,Diane,,,1,attack(4); sfxdamage(target|4); var numlist = [1|2|3|4|5|6]; givedice([rand(numlist)|rand(numlist)|rand(numlist)|rand(numlist)]);,,COMBINATION,,PURPLE,,,,,2,,,combination:7777,var numlist = [1|2|3|4|5|6]; givedice([rand(numlist)|rand(numlist)|rand(numlist)|rand(numlist)]);,,,,,,,,,,
Wide Cauldron_downgraded,Do [sword]2 damage[;]|get 2 new dice,Diane,,,1,attack(2); sfxdamage(target|2); var numlist = [1|2|3|4|5|6]; givedice([rand(numlist)|rand(numlist)]);,,COMBINATION,,PURPLE,,,,,,,,combination:7777,var numlist = [1|2|3|4|5|6]; givedice([rand(numlist)|rand(numlist)]);,,,,,,,,,,
Sheer Won't,Heal [vanish]<d6> damage|Unflict [vanish]1 fade,Titku,pun on sheer will by titku. implemented by bert but i'm 90% sure titku herself came up with this one.,1,1,sfx(~_heal~); attackself(-d|VANISH); if(getstatusself(~fade~) > 0) { removestatusself(~fade~); sfx(~_cure~|~~|0.1); },Delude,MAX3,,PINK,increaserange,change_power,,_vanish,0,YES,NO,,,,,,,,,,,,
Sheer Won't_downgraded,Heal [vanish]<d6> damage|Unflict [vanish]1 fade,Titku,,,1,sfx(~_heal~); attackself(-d|VANISH); if(getstatusself(~fade~) > 0) { removestatusself(~fade~); sfx(~_cure~|~~|0.1); },Delude,MAX2,,PINK,,,,_vanish,0,YES,NO,,,,,,,,,,,,
Eternal Dagger,Do [sword]<d6> damage|30% chance to fail|[gray](Reuseable),gost,made after realizing grabbag's 'zeus dagger' item (do d6 damage; shock this) was startlingly similar to more fluff's 'plug socket' item (reroll the dice; shock a random item) which itself is similar to eternal cauldron -gost,,1,if(!chance(30)) { attack(d); sfxdamage(target|d); } else { self.textparticle(~No effect!~); },,NORMAL,,GRAY,add1,complicate,,,-1,,,,,,,,,,,,,,
name,Get a new dice[;] min 1|On 6[;] increase min by 1|for this battle,glitch,,,1,,,NORMAL,,GREEN,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Melting Sword,Do [sword]<d6> damage|At start of turn 4[;] this|permanently breaks,glitch,,,1,,,NORMAL|FREE2,,RED,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Half a Sword,Odd uses: +[sword]<d6> to next use|Even uses: do [sword]<d6> damage,glitch,,,1,,,NORMAL,,RED,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Backhand,Do [sword]2 damage. If filled|perfectly[;] inflict [vanish]1 fade,Titku,,,1,,,COUNTDOWN,3,PINK,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname24,Do [sword]6 damage. If filled|perfectly[;] inflict [vanish]Vanish,Titku,,,2,,,COUNTDOWN,10,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname25,Do [sword]<d6> damage. Take 2 damage|every time you use a <var:tn25random>|(randomly selected each turn),Ashley,'Implemented' by Titku. thx titku xuo,,2,,,NORMAL|FREE3,,,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
Loan,Roll 2 dice now|[]-1 dice next turn,Ashley,Implemented by Titku. thanks again hon!,,1,givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); self.bonusdicenextturn--;,,NORMAL,,PURPLE,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname26?,Bump all your dice now|Nudge all your dice next turn,Titku,,,1,//Should also bump the dice used in it for consistency with the below item!,,NORMAL,,BRIGHTCYAN,,,,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
tempname26,Set this dice to 6 now|Freeze a dice next turn,Titku,,,1,//...Maybe this is redundant to Baseball Glove; though.,,NORMAL,,BRIGHTCYAN,,,ice,,,,,unfinished|excludefromrandomlists,,,,,,,,,,,
