"Name","Description","Author","Comment","Witch Spell","Size","Script: On Execute","Gadget","Slots","NEED TOTAL?","Colour","Upgrade","Weaken","Alternate Status Trigger","SFX","Uses?","Cast Backwards?","Single use?","Tags","Script: On Dodge","Script: Before Combat","Script: After Combat","Script: Before Start Turn","Script: On Start Turn","Script: End Turn","Script: On any equipment use","Script: Before execute","Script: On Snap","Script: On Fury","Script: On any countdown reduce"
"Mars Gospel","Do [sword]<d6> damage|25% chance +[reduce]2 armour",,"Mars Gospel is unused in normal ncrmod. -Black Widow",,1,"var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 2); sfx(~reduce~|~~|0.2);  } attack(d); sfxdamage(target|d);","Barricade","MAX5",,"ORANGE","change_power","change_power",,,0,"NO","NO",,"var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 2); sfx(~reduce~|~~|0.2);  }",,,,,,,,,,
"Mars Gospel_upgraded","Do [sword]<d6> damage|25% chance +[reduce]3 armour",,,,1,"var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 3); sfx(~reduce~|~~|0.2);  } attack(d); sfxdamage(target|d);","Barricade","MAX5",,"ORANGE",,,,,0,"NO","NO",,"var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(REDUCE| 3); sfx(~reduce~|~~|0.2);  }",,,,,,,,,,
"Mars Gospel_downgraded","Do [sword]<d6> damage",,,,1,"attack(d); sfxdamage(target|d);","Barricade","MAX5",,"ORANGE",,,,,0,"NO","NO",,,,,,,,,,,,
"Jumbo Cauldron","Deal [sword]<d6> damage|(on turn start[;] reroll lowest dice)","Lovebug",,,2,"attack(d); sfxdamage(target|d);","Broken Gadget","NORMAL",,"PURPLE",,,,,0,"NO","NO",,,,,,"if(self.dicepool.length > 0) { var min = 7; var dicelist = [for(dice in self.dicepool) if(dice.available()) dice]; for(dice in dicelist) if(dice.basevalue < min) min = dice.basevalue; for(dice in dicelist) if(dice.basevalue == min) { dice.].animatereroll(rand([1|2|3|4|5|6]) | self.screenposition()); break; } }",,,,,,
"Jumbo Cauldron_downgraded","Deal [sword]2 damage|Get a new dice","Lovebug",,,2,"attack(2); sfxdamage(target|2); givedice();","Broken Gadget","NORMAL",,"PURPLE",,,,,0,"NO","NO",,"givedice();",,,,,,,,,,
"Jumbo Cauldron_upgraded","Deal [sword]<d6> damage|(on turn start[;] flip lowest dice)","Lovebug",,,2,"attack(d); sfxdamage(target|d);","Broken Gadget","NORMAL",,"PURPLE",,,,,0,"NO","NO",,,,,,"if(self.dicepool.length > 0) { var min = 7; var dicelist = [for(dice in self.dicepool) if(dice.available()) dice]; for(dice in dicelist) if(dice.basevalue < min) min = dice.basevalue; for(dice in dicelist) if(dice.basevalue == min) { dice.].animatereroll(7 - d) | self.screenposition()); break; } }",,,,,,
"Polarized Cauldron","Do [sword]1 damage|Get a dice of different parity","Lovebug",,,1,"attack(1); sfxdamage(target|1); if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));","Broken Gadget","NORMAL",,"GRAY",,,,,0,"NO","NO",,"if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));",,,,,,,,,,
"Polarized Cauldron_downgraded","Do [sword]1 damage","Lovebug",,,1,"attack(1); sfxdamage(target|1); if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));","Broken Gadget","NORMAL",,"GRAY",,,,,0,"NO","NO",,"if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));",,,,,,,,,,
"Pulsing Cauldron","Do [sword]1 damage|On low (1-3)[;] get a high dice|On high (4-6)[;] get a low dice","Lovebug",,,1,"attack(1); sfxdamage(target|1); if(d < 4) givedice(rand([4|5|6])); else givedice(rand([1|2|3]));","Broken Gadget","NORMAL",,"GRAY",,,,,0,"NO","NO",,"if(d % 2 == 0) givedice(rand([1|3|5])); else givedice(rand([2|4|6]));",,,,,,,,,,
"Superconductor","Deal [sword]30 damage.|Dice used in non-countdown|equipment also count for this","Lovebug",,,2,"attack(30); sfxdamage(target|30);","Broken Gadget","COUNTDOWN",60,"RED",,,,,,,,,,,,,,,"var last = self.lastequipmentused; if(!onlimit && last != null && last.assigneddice.length > 0) { var dicelist = [for(dice in last.assigneddice) if(dice != null) dice]; for(dice in dicelist) { last.remove(dice); e.assigndice(dice); } }",,,,
"Oingo Boingo Rageblade","Do [sword]2x<slotdoubles> damage[;]|on double 6[;] gain [fury]Fury|[80%][gray]''oingo boingo rageblade''[]","Lovebug","Unused in normal ncrmod. -Black Widow",,2,"attack(d * 2); sfxdamage(target|d * 2); if(actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) { inflictself(FURY); sfx(~_fury~); }","Fury","DOUBLES|DOUBLES",,"RED","change_power","change_power",,"none",,,,,,,,,,,,,,"if(actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) { e.preventdefault = true; e.maintainfury = true; }",
"Oingo Boingo Rageblade_upgraded","Do [sword]2x<slotdoubles> damage[;]|on double 4 or 6[;] gain [fury]Fury|[80%][gray]''oingo boingo rageblade''[]","Lovebug",,,2,"attack(d * 2); sfxdamage(target|d * 2); if((actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) # (actualdice[0] != null && actualdice[0].basevalue == 4 && actualdice[1] != null && actualdice[1].basevalue == 4)) { inflictself(FURY); sfx(~_fury~); } /*double 4 was actually a typo; i meant double 5. then i decided 4 is cooler and we need more 4s*/","Fury","DOUBLES|DOUBLES",,"RED",,,,"none",,,,,,,,,,,,,,"if((actualdice[0] != null && actualdice[0].basevalue == 6 && actualdice[1] != null && actualdice[1].basevalue == 6) # (actualdice[0] != null && actualdice[0].basevalue == 4 && actualdice[1] != null && actualdice[1].basevalue == 4)) { e.preventdefault = true; e.maintainfury = true; }",
"Oingo Boingo Rageblade_downgraded","Do [sword]12 damage[;] gain [fury]Fury|[80%][gray]''oingo boingo rageblade''[]","Lovebug",,,2,"attack(12); sfxdamage(target|12); inflictself(FURY); sfx(~_fury~);","Fury","REQUIRE6|REQUIRE6",,"RED",,,,"none",,,,,,,,,,,,,,"e.preventdefault = true; e.maintainfury = true;",
"Hamm","Deal [shock]<d6> damage|On 6[;] inflict [shock]Shock","Lovebug",,1,1,"attack(d|SHOCK); sfxdamage(target|d); if(d == 6) { inflict(SHOCK); sfx(~_shock~); }","Broken Gadget","MAX3|MAX3",,"YELLOW","change_power","change_power",,,,,,,,,,,,,,,,,
"Hamm_upgraded","Deal [shock]<d6> damage|On 6 or 8[;] inflict [shock]Shock","Lovebug",,,1,"attack(d|SHOCK); sfxdamage(target|d); if(d == 6 # d == 8) { inflict(SHOCK); sfx(~_shock~); }","Broken Gadget","MAX4|MAX4",,"YELLOW",,,,,,,,,,,,,,,,,,,
"Hamm_downgraded","Deal [shock]<d6> damage|On 2[;] inflict [shock]Shock","Lovebug",,,1,"attack(d|SHOCK); sfxdamage(target|d); if(d == 2) { inflict(SHOCK); sfx(~_shock~); }","Broken Gadget","MAX3|MAX3",,"YELLOW",,,,,,,,,,,,,,,,,,,
"Doodad","Deal [sword]<d6>[;] replace this with|a temporary item next turn","Lovebug",,,2,"attack(d); sfxdamage(target|d);","Broken Gadget","NORMAL",,,"reducesize","complicate",,,,,,"unfinished|excludefromrandomlists",,,,"if(e.timesused > 0) { var newitem = rand(getequipmentlist(null|[e.size == 1 ? 'small' : 'large']|runscript('ncrmod/getexceptions'|[self])); giveequipment(newitem); }",,,,,,,
"tempname1","Reduce countdowns by <d6>|Return both dice","Lovebug",,,1,,"Broken Gadget","DOUBLES|DOUBLES",,"GREEN",,,,,,"YES",,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Oddeven Dicemanip","At odd health: flip the dice|At even health: reroll the dice","Lovebug",,,1,"if(self.hp % 2 == 1) givedice(7 - d); else givedice();","Broken Gadget","NORMAL",,,"change_power",,,,,"YES",,,,,,,,,,,,,
"Oddeven Dicemanip_upgraded","At odd health: flip the dice|At even health: reroll the dice|Recover [heal]2 health","Lovebug",,,1,"if(self.hp % 2 == 1) givedice(7 - d); else givedice(); attackself(-2); sfx(~_heal~);","Broken Gadget","NORMAL",,,,,,,,"YES",,,,,,,,,,,,,
"Mercury Fly Trap","Do [sword]<d6> damage. If your dice|sum to greater than enemy's health[;] heal [heal]3","Lovebug",,,1,,"Broken Gadget","MIN4",,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname2","If enemy's health bar is more percent full|than yours[;] then drain [heart]<d6>. Otherwise[;]|deal [sword]<d6> damage.","Lovebug",,,1,,"Broken Gadget","MAX3",,"RED",,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Bad Damage","Do [sword]<d6> damage. If you're|at full HP[;] return the dice",,"Original plan was to give this to parallel Warrior as some early drop. -Black Widow",,2,"attack(d); sfxdamage(target|d); if(self.hp == self.maxhp) givedice(d);","Pea Gun","NORMAL",,"RED","change_power","change_power",,,,,,,"if(self.hp == self.maxhp) givedice(d);",,,,,,,,,,
"Bad Damage_downgraded","Do [sword]<d6> damage",,,,2,"attack(d); sfxdamage(target|d);","Pea Gun","NORMAL",,"RED",,,,,,,,,,,,,,,,,,,
"Bad Damage_upgraded","Do [sword]<d6> dmg. If [heart]3 or less|from full HP[;] return the dice",,,,2,"attack(d); sfxdamage(target|d); if(self.hp >= self.maxhp - 3) givedice(d);","Pea Gun","NORMAL",,"RED",,,,,,,,,"if(self.hp == self.maxhp) givedice(d);",,,,,,,,,,
"tempname3","Unlocks if you lose 12 or more health|during enemy's last turn and this turn","Lovebug",,,1,,"Broken Gadget",,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname4","If your limit break is full[;]|do Z and decharge it entirely","Lovebug",,,1,,"Broken Gadget","EVEN",,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname5","Lose [heart]6 health[;] refill your limit break totally|This turns into Scrap Metal on use","Lovebug",,,1,,"Broken Gadget",,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname6","Gain [cog]Injection","Lovebug",,,1,,"Broken Gadget","REQUIRE6",,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname7","Mix up slots on|enemy cards","Lovebug",,,1,,"Broken Gadget",,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname8","This card deals <d6> damage|next fight (total: <var:stonks>)","Lovebug",,,1,,"Broken Gadget","NORMAL",,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname9","This card deals <var:ultrastonks> damage at the start of every fight|On use[;] increase that by 1","Lovebug",,,1,,"Broken Gadget","REQUIRE6",,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Bopulate","Deal [sword]3 damage|If [yellow]<var:deckbonusnumber>[] is <d6>[;] return the dice","Lovebug",,,1,"attack(3); sfxdamage(target|3); if(d == self.getvar(~deckbonusnumber~)) { givedice(d); }","Broken Gadget","MIN3",,"GREEN",,,,,,,,"excludefromrandomlists",,,,,,,,,,,
"Mood Set","Deal [sword]2 damage[;] set the|deck's bonus number to [yellow]<d6>[]","Lovebug",,,1,"attack(2); sfxdamage(target|2); self.setvar(~deckbonusnumber~|d);","Broken Gadget","NORMAL",,"GRAY",,,,,,,,"excludefromrandomlists",,,,,,,,,,,
"Dissonance","If [yellow]<var:deckbonusnumber>[] is even: Reroll dice|If [yellow]<var:deckbonusnumber>[] is odd: Gain [shield]2 shield","Lovebug",,,1,"var b = self.getvar(~deckbonusnumber~); var effect = false; if(b % 2 == 0) { givedice(); effect = true; } if(b % 2 == 1) { inflictself(SHIELD|2); sfx(~_shield~); effect = true; } if(!effect) self.textparticle(~No effect!~); /*No effect is a leftover from when the equipment's effects were on 1-3 and 4-6; so 0 wouldn't work.*/","Broken Gadget","NORMAL",,"PURPLE",,,,,,,,"excludefromrandomlists",,,,,,,,,,,
"Beat Box","Receive a Diversion","Lovebug",,,1,,,,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Counterang","Lock all [lock]<d6>s for you|and enemy this fight","Lovebug",,,1,"inflictself(~ncr_lingeringcounter~ + d); inflict(~ncr_lingeringcounter~ + d); sfx(~_lock~); sfx(~_lock~|~~|0.2);","Pinwheel","NORMAL",,,,,,,,,,,,,,,,,,,,,
"Rubbing Alcohol","Deal [sword]<d6> dmg[;] +2 [poison]poison|On 1[;] sell this to enemy[;] and|gain [gold]3 on their first use","Lovebug",,,1,"if(d != 1) { attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); } else { sfx(~openchest~); giveenemyequipment(~Rubbing Alcohol@enemy~| false| false); e.temporary_thisturnonly = true; }","Dry Cough","MAX5",,"GREEN","change_power","complicate",,,,,,"showgold",,,,,,,,,,,
"Rubbing Alcohol@enemy","Deal [sword]<d6> damage[;]|inflict 2 [poison]poison","Lovebug",,,1,"attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); if(e.timesused == 0) { target.gold += 3; sfx(~pickupgold~); }","Dry Cough","MAX5",,"GREEN","change_power","complicate",,,,,,"showgold|excludefromrandomlists",,,,,,,,,,,
"Rubbing Alcohol_upgraded","Deal [sword]<d6> dmg[;] +2 [poison]poison|On 1[;] sell this to enemy[;] and|gain [gold]4 on their first use","Lovebug",,,1,"if(d != 1) { attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); } else { sfx(~openchest~); giveenemyequipment(~Rubbing Alcohol@enemy+~| false| false); e.temporary_thisturnonly = true; }","Dry Cough","NORMAL",,"GREEN",,,,,,,,"showgold",,,,,,,,,,,
"Rubbing Alcohol@enemy_upgraded","Deal [sword]<d6> damage[;]|inflict 2 [poison]poison","Lovebug",,,1,"attack(d); inflict(POISON|2); sfxdamage(target|2); sfx(~_poison~|~~|0.2); if(e.timesused == 0) { target.gold += 4; sfx(~pickupgold~); }","Dry Cough","NORMAL",,"GREEN",,,,,,,,"showgold|excludefromrandomlists",,,,,,,,,,,
"Polearm","Deal [sword]<d6> damage","Lovebug",,,2,"attack(d); sfxdamage(target|d);","Rust Monster","MAX3|FREE3",,"ORANGE","reducesize","change_power",,,,,,,,,,,,,,,,,
"Polearm_downgraded","Deal [sword]<d6> damage","Lovebug",,,2,"attack(d); sfxdamage(target|d);","Rust Monster","MAX2|FREE2",,"ORANGE",,,,,,,,,,,,,,,,,,,
"Polearm_weakened","Deal [sword]<d6> damage","Lovebug",,,1,"attack(d); sfxdamage(target|d);","Rust Monster","MAX2|FREE2",,"ORANGE",,,,,,,,,,,,,,,,,,,
"Jugglenaut","On 1-3[;] reroll the dice|On 4-6[;] do [sword]<d6> damage","Lovebug",,,2,"/*todo lol*/",,"NORMAL",,"RED",,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"tempname10","Cost [gold]1[]: +[heart]1 max HP","Dottie","Intended as an Inventor item. More balanced as +2 max HP; perhaps? -Black Widow",,1,"if(self.gold >= 1) { self.gold--; self.maxhp++; self.hp++; sfx(~levelup~); sfx(~pickupgold~|~~|0.2); } else { self.textparticle(~Can't afford!~); }",,"NORMAL",,"RED","change_power","change_power",,,,"YES",,"showgold",,,,,,,,,,,
"tempname10_upgraded","Cost [gold]1[]: +[heart]1 max HP[;]|and get a new dice","Dottie/Black Widow blend",,,1,"if(self.gold >= 1) { self.gold--; self.maxhp++; self.hp++; sfx(~levelup~); sfx(~pickupgold~|~~|0.2); givedice(); } else { self.textparticle(~Can't afford!~); }",,"NORMAL",,"RED",,,,,,"YES",,"showgold",,,,,,,,,,,
"tempname10_downgraded","Cost [gold]1[]: +[heart]1 max HP","Dottie/Black Widow blend",,,1,"if(self.gold >= 1) { self.gold--; self.maxhp++; self.hp++; sfx(~levelup~); sfx(~pickupgold~|~~|0.2); } else { self.textparticle(~Can't afford!~); }",,"EVEN",,"RED",,,,,,"YES",,"showgold",,,,,,,,,,,
"Autoshovel","On 6[;] inflict [weaken]Weaken|<evar:weakencount>|","Dottie/Black Widow blend","Changing this to be three-use and involve doequipmentaction was my idea & execution. God; what a nerd-snipe. -Black Widow",,2,"inflict(WEAKEN|e.getvar(~weakencount~)); sfx(~_weaken~);","Guitar Solo",,,"ORANGE","reducesize","change_power",,,3,,,,,,,,,,"e.resetvar(~weakencount~); var weaken = 0; var last = self.lastequipmentused; if(last != null && last.getslots().length > 0) { if(last.countdown > 0 && last.dicehistory.length > 0) { for(dice in last.dicehistory) { if(dice.basevalue == 6) { weaken++; } } } else { if(last.assigneddice.length > 0) { for(dice in last.assigneddice) { if(dice != null) { if(dice.basevalue == 6) { weaken++; } } } } } if(weaken > 0) { e.setvar(~weakencount~|weaken); e.doequipmentaction(self|target|e.castdirection|[]|0|true); self.lastequipmentused = e; } }",,,,
"Autoshovel_downgraded","Inflict [weaken]Weaken",,,,2,"inflict(WEAKEN); sfx(~_weaken~);","Guitar Solo","REQUIRE6",,"ORANGE",,,,,,,,,,,,,,,,,,,
"Autoshovel_weakened","Inflict [weaken]Weaken",,,,1,"inflict(WEAKEN); sfx(~_weaken~);","Guitar Solo","REQUIRE6",,"ORANGE",,,,,,,,,,,,,,,,,,,
"Baseball Glove","Roll a 6|(Each turn[;] throw lowest dice)",,,,1,"givedice(6);","Conformity","NORMAL",,"GREEN","change_power","change_power",,,,"YES",,,,,,,"e.animate(~flashandshake~); var lowest = 7; for(dice in self.dicepool) if(dice.available() && dice.basevalue < lowest) lowest = dice.basevalue; var dicebackup = self.dicepool.copy(); var lowestonly = []; for(dice in self.dicepool) if(dice.available() && dice.basevalue == lowest) lowestonly.push(dice); self.dicepool = lowestonly; throwdice(); self.dicepool = dicebackup;",,,,,,
"Baseball Glove_downgraded","Roll a 5|(Each turn[;] throw lowest dice)",,,,1,"givedice(5);","Conformity","NORMAL",,"GREEN",,,,,,"YES",,,,,,,"e.animate(~flashandshake~); var lowest = 7; for(dice in self.dicepool) if(dice.available() && dice.basevalue < lowest) lowest = dice.basevalue; var dicebackup = self.dicepool.copy(); var lowestonly = []; for(dice in self.dicepool) if(dice.available() && dice.basevalue == lowest) lowestonly.push(dice); self.dicepool = lowestonly; throwdice(); self.dicepool = dicebackup;",,,,,,
"Baseball Glove_upgraded","Roll a 6[;] inflict [lock]Lock|(Each turn[;] throw lowest dice)",,,,1,"givedice(6); inflict(LOCK);","Conformity","NORMAL",,"GREEN",,,,"_lock",,"NO",,,"givedice(6);",,,,"e.animate(~flashandshake~); var lowest = 7; for(dice in self.dicepool) if(dice.available() && dice.basevalue < lowest) lowest = dice.basevalue; var dicebackup = self.dicepool.copy(); var lowestonly = []; for(dice in self.dicepool) if(dice.available() && dice.basevalue == lowest) lowestonly.push(dice); self.dicepool = lowestonly; throwdice(); self.dicepool = dicebackup;",,,,,,
"Sniper Rifle","[sword]7. If overfilled[;] take [sword]7.|[gray](Reuseable)",,,,2,"var dicehistory = runscript(~getfixeddh~|[e]); var sum = 0; for(i in 0...dicehistory.length) { sum += dicehistory[i].basevalue; if(sum >= e.countdown) { break; } } attack(7); sfxdamage(target|7); if(sum - e.countdown > 0) { attackself(7); sfxdamage(self|7); }",,"COUNTDOWN",7,"RED","reducesize","removereusable",,,-1,,,,,"e.setvar(~sourceequipment~|e);","e.resetvar(~sourceequipment~); e.resetvar(~dicehistory~);","e.setvar(~sourceequipment~|e); ",,,,,,"runscript(~fixfurydh~|[e]);",
"Comically Oversized Spoon","Do [sword]<d6> damage. Reroll|remaining dice above <d6>","Black Widow","Temp name. -Black Widow",,2,"/*todo!!!*/",,"NORMAL",,"RED",,,,,,,,,,,,,,,,,,,
"Break the Mold","Do [sword]<d6> damage[;]|inflict [silence]Silence","name by black widow; effect by teve","Initially for the More Swaps mod; as a swap of Shooting Star. (Think about it.) -Black Widow",,2,"attack(d); sfxdamage(target|d); inflict(~ncr_silence~); sfx(~_silence~);",,"ODD",,"BRIGHTCYAN",,,,,,,,,,,,,,,,,,,
"Getaway Car","Deal [sword]<d6>[;] gain [car]1 car.|Cost [car]2[]: double damage.","Lovebug",,,2,,,,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Combo Sword","Deal [sword]<d6> damage[;] +1 if|<d6> was used here last (<evar:lastuseddice>)","Black Widow",,,2,,,,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Flesh in Armour","Do [sword]2 damage[;] on 3[;]|also gain [shield]2 shield","Black Widow",,,2,"attack(2); sfxdamage(target|2); if(d == 3) { inflictself(SHIELD|2); sfx(~_shield~|~~|0.2); }",,"NORMAL",,"ORANGE",,,,,,,,,"if(d == 3) { inflictself(SHIELD|2); sfx(~_shield~); }",,,,,,,,,,
"Comically Oversized Spoon_upgraded","Do [sword]<d6> damage. Reroll|remaining dice below <d6>",,"Temp name. -Black Widow",,2,"/*todo!!!*/",,"NORMAL",,"RED",,,,,,,,,,,,,,,,,,,
"Void","No effect when used|Turn start: roll three 0s[;]|remove from your hand","name by black widow; effect by teve",,,2,,,"NORMAL",,"PURPLE",,,,,,"YES",,,,,,,"if(e.onscreen()) { e.animate(~flashandshake~); givedice([1|1|1]); var zeroes = [for(i in 1...4) self.dicepool[self.dicepool.length - i]]; for(dice in zeroes) { dice.modifier = -1; dice.showoverlayimage = true; dice.overlayimage_xoff = 0; dice.overlayimage_yoff = 0; dice.overlayimage_animate = 1; dice.overlayimage_repeat = true; var sprite = new displayobjects.HaxegonSprite(0|0|~dice0~|0|0); dice.graphic.overlayimage = sprite; } e.doequipmentaction(self|target|1|[]|0|true); }",,,,,,
"Comes and Goes@large","Do [sword]3 damage|Slot flips each turn","teve",,,2,"attack(3);",,"MIN3",,"BRIGHTCYAN",,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Comes and Goes@small","Do [sword]3 damage|Slot flips each turn",,,,2,"attack(3);",,"MAX4",,"BRIGHTCYAN",,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Bright Noise","Get a new dice you don't|have right now[;] next turn",,"Delayed Innovation. I'm a genius.",,1,"var notseen = [1|2|3|4|5|6]; notseen.remove(d); for (mydice in self.dicepool){ if (mydice.available() && notseen[notseen.indexOf(mydice.basevalue)] != null) {notseen.remove(mydice.basevalue);} } if (notseen.length == 0) { givedice(d); self.textparticle(~You've got all dice!~);} else { shuffle(notseen); inflictself(~stash~+notseen[0]); inflictself(~ncr_lightswitch~+notseen[0]); sfx(~magic~); }",,"NORMAL",,,,,,,,"YES",,,,,,,,,,,,,
"Stealth Strike","Deal [sword]15 damage|Turn start: remove from|hand[;] reset countdown","Eve",,,2,"if(!e.getvar(~doesnothing~)) { attack(15); sfxdamage(target|15); } else { e.setvar(~doesnothing~|false); }",,"COUNTDOWN",15,,,,,,,,,,,,,,"e.setvar(~doesnothing~|false); if(e.onscreen()) { e.remainingcountdown = e.countdown; e.animate(~flashandshake~); e.setvar(~doesnothing~|true); e.doequipmentaction(self|target|-1|[]|0|true); }",,,,,,
"tempname11","receive no more cards this turn","Eve",,,2,"/*gethandsize and put it somewhere; Deck.sethandsize(0); at end of turn sethandsize to old hand size;*/",,,,,,,,,,,,"unfinished|excludefromrandomlists",,,,,,,,,,,
"Trident Base","Inflict [ice]Freeze[;] [shock]Shock|On 5 or 6[;] +1 to either",,,,1,"var iceamt = 1; var shockamt = 1; if(d >= 5) { if(chance(50)) iceamt++; else shockamt++; } inflict(SHOCK|shockamt); inflict(ICE|iceamt); sfx(~_ice~); sfx(~_shock~); if(shockamt > 1) { sfx(~_shock~|~~|0.1); } if(iceamt > 1) { sfx(~_ice~|~~|0.1); }",,"NORMAL",,"BRIGHTCYAN","change_power","change_power",,,,,,,,,,,,,,,,,
"Trident Base_upgraded","Inflict [ice]Freeze[;] [shock]Shock|On 5 or 6[;] +1 to either|","gost",,,1,"var iceamt = 1; var shockamt = 1; if(d >= 5) { if(chance(50)) iceamt++; else shockamt++; } inflict(SHOCK|shockamt); inflict(ICE|iceamt); sfx(~_ice~); sfx(~_shock~); if(shockamt > 1) { sfx(~_shock~|~~|0.1); } if(iceamt > 1) { sfx(~_ice~|~~|0.1); }",,"NORMAL",,"BRIGHTCYAN",,,,,2,,,,,,,,,,,,,,
"Trident Base_downgraded","Inflict [ice]Freeze[;] [shock]Shock","gost",,,1,"inflict(SHOCK); inflict(ICE); sfx(~_ice~); sfx(~_shock~);",,"MAX3",,"BRIGHTCYAN",,,,,,,,,,,,,,,,,,,
"Snapshot@ncrmod","Copy all other dice|over to next turn|[gray](once per battle)","gost",,,2,"var runscript(~getavaildice~|[self|true]); if(dicevals.length > 0) { inflictself(~illuminate~); for(v in dicevals) inflictself(~stash~ + v); }",,"MIN4",,"YELLOW",,,,,,"YES","YES",,,,,,,,,,,,
"Feghoot","If this is the only card in|your hand[;] do [sword]10 damage",,"Based on alpha version of Punchline.",,2,"var onscreencount = 0; for(eq in self.equipment) if(eq != null && eq.skillcard == ~~ && eq.onscreen() && eq.equipalpha > 0) onscreencount++; if(onscreencount == 0) { attack(10); sfxdamage(target|10); } else { self.textparticle(~No effect!~); }",,"EVEN",,"ORANGE",,,,,,,,,,,,,,,,,,,
"The Chain of Chance","Deal [sword]<d6> damage. On 6[;]|make [vanish]Vanish more effective",,"Conceptualized by Gost; implemented by Lovebug",,2,"attack(d); sfxdamage(target|d); if(d == 6) { inflict(~ncr_chanced~); sfx(~upgradeequipment~); }",,"NORMAL",,"PINK",,,,,,,,,,,,,,,,,,,
"High Roller","Roll <d6> dice","Lovebug",,,2,"if(d > 0) { givedice([for(i in 0...d) rand([1|2|3|4|5|6])]); }","Cargo Lift","DOUBLES|DOUBLES",,"GREEN",,,,,,"YES",,,,,,,,,,,,,
"High Roller_upgraded","Roll up to <double> dice","Lovebug",,,2,"if(d > 0) { var r = (rand([for(i in 0...d) i]) + 1) * 2; givedice([for(i in 0...r) rand([1|2|3|4|5|6])]); }","Cargo Lift","DOUBLES|DOUBLES",,"GREEN","change_power","change_power",,,,"YES",,,,,,,,,,,,,
"High Roller_downgraded","Roll up to <d6> dice","Lovebug",,,2,"if(d > 0) { var r = rand([for(i in 0...d) i]) + 1; givedice([for(i in 0...r) rand([1|2|3|4|5|6])]); }","Cargo Lift","DOUBLES|DOUBLES",,"GREEN",,,,,,"YES",,,,,,,,,,,,,
"Stock Market","[]+1 to dice value for|every 2 gold you have ([gold]<gold>)","Lovebug",,,2,,"Auction","NORMAL",,"YELLOW",,,,,,,,,,,,,,,,,,,
"tempname12","Odd turns: duplicate dice|Even turns: [sword]<d6> dmg","Lovebug",,,2,"/*upgrade has a free1; duplicate returns a 1 along wtih the other dices.*/",,"NORMAL",,"GREEN",,,,,,,,,,,,,,,,,,,
"Paranoimia","Inflict [vanish]1 vanish each|turn for the rest of battle","Lovebug",,,1,,,,,,,,,,,,,,,,,,,,,,,,
"Hypothermia","Inflict [ice]1 freeze each|turn for the rest of battle","Lovebug",,,1,,,,,,,,,,,,,,,,,,,,,,,,
"Pyromania","Inflict [fire]1 burn each|turn for the rest of battle","Lovebug",,,1,,,,,,,,,,,,,,,,,,,,,,,,
"Planetsmasher","Do [sword]<d6> damage[;]|on 4[;] toggle alt. statuses|on you and the enemy","Lovebug",,,1,,,"MAX4",,"PURPLE",,,,,,,,,,,,,,,,,,,
"Sparkthrower","Do [sword]2 damage|[shock]<timesused> shock[;] +1 per use","Lovebug",,,1,,,"NORMAL",,"GREEN",,,,,,,,,,,,,,,,,,,
"Earsplitter","Do [sword]2 damage|[weaken]<timesused> weaken[;] +1 per use","Lovebug",,,1,,,"NORMAL",,"PURPLE",,,,,,,,,,,,,,,,,,,
